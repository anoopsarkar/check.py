#!/usr/bin/env python2
"""
Here each of the main testcase groups tests a single C program which must be given as source file named as the group name plus a .c suffix. There must be a makefile such that "make GROUP" will build the executable ./GROUP for group GROUP from source GROUP.c. The main testcase groups run make to do the build before running the resulting program. An extra "build" group runs the make step for all programs but does not run them.
"""

import check
import os
import difflib
import re

def edgews_normalize(*parts):
    def filter(x):
        x = [l.strip() for l in x]
        return [l + '\n' for l in x if l != '']
    return [filter(x) for x in parts]

def diff_almost_exact(a, b, output):
    a, b = edgews_normalize(a, b)
    if a != b:
            output.write("Diff in output:\n")
            output.writelines(difflib.unified_diff(a, b))
            return False
    return True

def command_make(**args):
    return ["make", "nl"]

def command_make_and_run(**args):
    return [os.path.join(args['check_dir'], "make-and-run"), "nl"]

checks = {
    "build": {
        "command": command_make,
        "source_files": ["nl.c"],
        "stdout": None,
        "stderr": None,
        "file_checks": []
    },
    "nl": {
        "command": command_make_and_run,
        "source_files": ["nl.c"],
        "stdout": diff_almost_exact,
        "stderr": None,
        "file_checks": []
    }
}

check.check_all(checks, {}, extra_usage=__doc__.rstrip('\n\r'))
